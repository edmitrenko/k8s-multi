name: deploy-docker-multi-container
env:
  AWS_REGION_NAME           : "eu-central-1"
  
on:
 push:
  branches:
   - main

jobs:
 CI:
  runs-on: ubuntu-latest

  steps:
    - name: Git clone our repo
      uses: actions/checkout@v2

    - name: Create docker container for test
      run: docker build -t edmitrenko/react-test -f ./client/Dockerfile.dev ./client

    - name: Run tests
      run: docker run -e CI=true edmitrenko/react-test npm test

    - name: Login to dockerhub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - run: docker build -t edmitrenko/multi-client:latest -f ./client/Dockerfile ./client
   
    - run: docker push edmitrenko/multi-client:latest
      
    - name: Print Happy Message for CI finish
      run : echo "CI Pipeline part Finished successfully!"

 CD:
  runs-on: ubuntu-latest
  needs: [CI]

  steps:
    - name: Git clone our repo
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.3'
      id: install  
    
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
    
    - name: Configure kubectl credentials
      run: |
        aws sts get-caller-identity
        aws eks --region ${{ env.AWS_REGION_NAME }} update-kubeconfig --name cluster
        
    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s
        kubectl rollout restart deployments/client-deployment client=edmitrenko/multi-client

    - name: Verify Kubernetes deployment
      run: |
        kubectl rollout status deployments/client-deployment   

    - name: Print Happy Message for CD finish
      run : echo "CD Pipeline part Finished successfully!"
